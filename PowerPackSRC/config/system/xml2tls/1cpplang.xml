<?xml version="1.0" encoding="windows-1251" ?>
<!DOCTYPE Types [
<!ELEMENT Types (type*)>
<!ELEMENT type (attribs*,methods*,handlers*)>
	<!ATTLIST type 
		name NMTOKEN #REQUIRED
		alias CDATA #IMPLIED
		base CDATA #IMPLIED
		creatable CDATA #IMPLIED
		components CDATA #IMPLIED
		abstract CDATA #IMPLIED
	>
<!ELEMENT attribs (attrib+)>
<!ELEMENT attrib (#PCDATA)*>
	<!ATTLIST attrib
		name 	CDATA #REQUIRED
		alias 	CDATA 	#IMPLIED
		type 	CDATA 	#IMPLIED
		InExprOnly CDATA 	#IMPLIED
		components CDATA #IMPLIED
	>
<!ELEMENT methods (method+)>
<!ELEMENT method (#PCDATA|params|return)*>
	<!ATTLIST method
		name 	CDATA	#REQUIRED
		alias 	CDATA 	#IMPLIED
		components CDATA #IMPLIED
	>
<!ELEMENT params (param+)>
<!ELEMENT param (#PCDATA)>
	<!ATTLIST param
		name 	CDATA	#REQUIRED
		type	CDATA	#IMPLIED
		default	CDATA	#IMPLIED
	>
<!ELEMENT return (#PCDATA)>
	<!ATTLIST return
		type	CDATA	#IMPLIED
		InExprOnly CDATA 	#IMPLIED
	>
<!ELEMENT handlers (method+)>
]>
<Types>
	<type name="UserDefinedClass" alias=" ќѕ" abstract="1">
		<methods>
			<method name="ѕолучитьЅазовый ласс" alias="GetBaseClass">
				<params>
					<param name="»м€Ѕазового ласса" type="String" default="">
						им€ класса, объект которого надо получить
					</param>
				</params>
				<return type="UserDefinedClass">
					объект базового класса дл€ класса наследника
				</return>
			</method>
			<method name="ЌазначитьЅазовый ласс" alias="AssignBaseClass">
				позвол€ет дл€ созданного  ќѕа назначить динамически базовый класс
				<params>
					<param name="»м€Ѕазового ласса" type="String">
						им€ базового класса
					</param>
				</params>
			</method>
			<method name="ќтправить—ообщениећодулю’оз" alias="SendMessageOwnMod">
				¬ызывает предопределенную функцию ќбработка—обыти€ќт ласса в модуле работающим с объектом  ќѕ
				<params>
					<param name=" тоќтправил" type="String">
						отправитель сообщени€
					</param>
					<param name="¬ид—ообщени€" type="String">
						вид отправл€емого сообщени€
					</param>
					<param name="ƒанные">
						отправл€емые данные любого типа
					</param>
				</params>
				<return>
					любое значение, которое будет получено после вызова ќтправить—ообщениећодулю’оз() в модуле  ќѕ
				</return>
			</method>
			<method name="ѕолучитьѕуть" alias="GetPathName">
				<return type="FilePath" InExprOnly="1">
					полный путь и название файла в котором хранитьс€ модуль реализации класса
				</return>
			</method>
			<method name="ѕолучить онтекстќкружени€" alias="GetEnvContext">
				<return type="Context" InExprOnly="1">
					контекст из которого получил управление модуль  ќѕ
				</return>
			</method>
			<method name="ѕолучить—писокѕараметров" alias="GetParamsList">
				<params>
					<param name="стр»м€ћетода" type="String">
						Ќазвание метода в котором необходимо получить список не€вных параметров
					</param>
				</params>
				<return type="ValueList">
					список со значени€ми не€вных параметров переданных в метод
				</return>
			</method>
			<method name="”становитьѕараметрѕо»ндексу" alias="SetOnIndexParams">
				ћетод предназначен дл€ получени€ ссылки значени€ не€вного параметра по его пор€дковому номеру и установке нового значени€ по данной ссылке
				<params>
					<param name="стр»м€ћетода" type="String">
						»м€ метода в ссылки на не€вные параметры, которого необходимо получить
					</param>
					<param name="ч»нд" type="Number">
						номер не€вного параметра ссылку на которого надо получить и заменить
					</param>
					<param name="н«нач">
						Ќовое значение
					</param>
				</params>
				<return type="0;1">
					1-установка успешно произведена, 0-произошла ошибка при установке
				</return>
			</method>
			<method name="«аменитьЁксзЅазового ласса" alias="ReplaceInstBaseClasses">
				ѕредназначен дл€ замены экземпл€ра базового класса в уже созданной иерархии классов
				<params>
					<param name="стр»м€ ласса" type="String">
						»м€ базового класса экземпл€р которого мы собираемс€ замен€ть
					</param>
					<param name="н«начение ласса">
						новый экземпл€р базового класса
					</param>
				</params>
				<return type="0;1">
					1-замена успешно произведена, 0-произошла ошибка при замене
				</return>
			</method>
			<method name="_ѕриќткрытии" alias="_OnOpen">
				ƒанный метод используетс€ только в цел€х подключени€ отладчика дл€ отладки классов 1—++
			</method>
			<method name="_¬ыбросить»скл" alias="_Throw">
				‘ормирует исключение с объектом исключением
				<params>
					<param name="ќбъект»скл">
						Ћюбой объект 1—
					</param>
				</params>
			</method>
		</methods>
	</type>
	<type name="WorkAsRegisterWin" alias="–абота—–егистромWin" creatable="WorkAsRegisterWin,–абота—–егистромWin">
		<methods>
			<method name="—оздать люч" alias="CreateKey">
				<params>
					<param name=" люч" type="String">
						строка с названием ветви реестра: HKEY_CLASSES_ROOT | HKEY_CURRENT_CONFIG | HKEY_CURRENT_USER | HKEY_LOCAL_MACHINE | HKEY_USERS
					</param>
					<param name="»м€" type="String">
						строка с названием ключа реестра
					</param>
					<param name="–ежим" type="String">
						строка с режимом создани€ ключа
					</param>
				</params>
				<return type="-1;0;1">
					-1-ошибка, 0-ключ с таким название уже существует и будет просто открыт, 1-ключ успешно создан
				</return>
			</method>
			<method name="ќкрыть люч" alias="OpenKey">
				<params>
					<param name=" люч" type="String">
						строка с названием ветви реестра: HKEY_CLASSES_ROOT | HKEY_CURRENT_CONFIG | HKEY_CURRENT_USER | HKEY_LOCAL_MACHINE | HKEY_USERS
					</param>
					<param name="»м€" type="String">
						строка с названием ключа реестра
					</param>
					<param name="–ежим" type="String">
						строка с режимом создани€ ключа_SET_VALUE, and KEY_CREATE_SUB_KEY access rights.
					</param>
				</params>
				<return type="0;1">
					0-ошибка, 1-ключ открыт
				</return>
			</method>
			<method name="ѕодключить–егистр" alias="ConnectRegistry">
				используетс€ дл€ подключени€ к реестру удаленного компьютера
				<params>
					<param name="»м€”даленного омпьютера" type="String">
						сетевое им€ компьютера к реестру которого необходимо подключитьс€
					</param>
					<param name=" люч" type="String">
						строка с названием ветви реестра: HKEY_LOCAL_MACHINE | HKEY_USERS
					</param>
				</params>
				<return type="0;1">
					0-ошибка, 1-соединение установлено
				</return>
			</method>
			<method name="”далить люч" alias="DeleteKey">
				”дал€ет подключ открытого ранее ключа
				<params>
					<param name="»м€ѕод люча" type="String">
						им€ подключа
					</param>
				</params>
				<return type="0;1">
					0-ошибка, 1-успех
				</return>
			</method>
			<method name="”далить«начение" alias="DeleteValue">
				”дал€ет значение открытого ранее ключа
				<params>
					<param name="»м€«начени€" type="String">
						им€ значени€
					</param>
				</params>
				<return type="0;1">
					0-ошибка, 1-успех
				</return>
			</method>
			<method name="”становить«начение" alias="SetValue">
				”станавливает значение указанное в параметре NameValue
				<params>
					<param name="»м€«начени€" type="String">
						название значени€ в ключе
					</param>
					<param name="“ип«начени€" type="String">
						&quot;REG_SZ&quot; - тип значени€ строка, &quot;REG_DWORD&quot; - тип значени€ целое число
					</param>
					<param name="«начение" type="Number,String">
						значение которое необходимо установить
					</param>
				</params>
				<return type="0;1">
					0-ошибка, 1-успех
				</return>
			</method>
			<method name="«апросить«начение" alias="QueryValue">
				«апросить значение указанное в параметре NameValue, открытого  ранее ключа
				<params>
					<param name="»м€«начени€" type="String">
						название значени€ в ключе
					</param>
					<param name="«начение" type="VarName">
						полученное значение
					</param>
				</params>
				<return type="0;1">
					0-ошибка, 1-успех
				</return>
			</method>
			<method name="¬ыбрать лючи" alias="ChooseKeys">
				ќткрывает выборку подключей открытого ключа
				<return type="Number">
					количество подключей в выборке
				</return>
			</method>
			<method name="ѕолучить люч" alias="GetKey">
				<params>
					<param name="»м€ѕод люча" type="VarName">
						строка в которой возвращаетс€ название подключа полученного из выборки
					</param>
				</params>
				<return type="0;1">
					0-выборка пуста, 1-в выборке еще есть подключи
				</return>
			</method>
			<method name="¬ыбрать«начени€" alias="ChooseValues">
				ќткрывает выборку значений открытого ключа
				<return type="Number">
					количество значений в выборке
				</return>
			</method>
			<method name="ѕолучить«начение" alias="GetValue">
				<params>
					<param name="»м€«начени€" type="VarName">
						строка в которой возвращаетс€ название значени€ полученного из выборки
					</param>
				</params>
				<return type="0;1">
					0-выборка пуста, 1-в выборке еще есть значени€
				</return>
			</method>
			<method name="ќтладочные—ообщени€" alias="EnableDebug">
				¬ключает/отключает отладочные сообщени€ при возникновени€ ошибок работы с реестром
				<params>
					<param name="¬ключить" type="0;1">
						1-включить, 0-отключить
					</param>
				</params>
			</method>
			<method name="«аписать¬сејтрибуты" alias="Flash">
				Ќемедленно записать изменени€ внесенные ранее в реестр
			</method>
		</methods>
	</type>
</Types>
