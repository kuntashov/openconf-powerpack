#!perl -w

use strict;
use Test;
use lib qw(../../ ../);
use CodeWorks;

BEGIN { plan tests => 22 }

use vars qw( $input $output $expected $code );

$code = <<EOF
// Приветствие
Сообщить("Привет, Мир!");
EOF
;

#== 1 ======================================================

$input = "";
$expected = qq(// Приветствие\nСообщить("Привет, Мир!"););
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "", $code), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 2 ======================================================

$input = <<EOF
Перем МояПеременная;
EOF
;
$expected = <<EOF
Перем МояПеременная;
// Приветствие
Сообщить("Привет, Мир!");
EOF
;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "", $code), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 3 ======================================================

$input = <<EOF
Перем МояПеременная;
МояПеременная = 1;
EOF
;
$expected = <<EOF
Перем МояПеременная;
МояПеременная = 1;
// Приветствие
Сообщить("Привет, Мир!");
EOF
;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "", $code), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 4 ======================================================

$input = <<EOF
Перем МояПеременная;

Функция МояФункция1()
	Возврат 1;
КонецФункции // МояФункция1()

Функция МояФункция2()
	Возврат МояПеременная;
КонецФункции // МояФункция2()

МояПеременная = 2;
EOF
;
$expected = <<EOF
Перем МояПеременная;

Функция МояФункция1()
	Возврат 1;
КонецФункции // МояФункция1()

Функция МояФункция2()
	Возврат МояПеременная;
КонецФункции // МояФункция2()

МояПеременная = 2;
// Приветствие
Сообщить("Привет, Мир!");
EOF
;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "", $code), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 5 ======================================================

$input = <<EOF
Перем МояПеременная;

Функция МояФункция1()
	Возврат 1;
КонецФункции // МояФункция1()

Функция МояФункция2()
	Возврат МояПеременная;
КонецФункции // МояФункция2()

МояПеременная = 2;
EOF
;
# в пустой строке после Сообщить(...) первым символом идет табуляция,
# последствия замены \n на \t, в результате чего при splite получаем 
# в качестве последнего элемента массива элемент со значением "\t"
$expected = <<EOF
Перем МояПеременная;

Функция МояФункция1()
	Возврат 1;
КонецФункции // МояФункция1()

Функция МояФункция2()
	// Приветствие
	Сообщить("Привет, Мир!");
	
	Возврат МояПеременная;
КонецФункции // МояФункция2()

МояПеременная = 2;
EOF
;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "МояФункция2", $code), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 6 ======================================================

$input = <<EOF
Перем МояПеременная;

Функция МояФункция1()
	Возврат 1;
КонецФункции // МояФункция1()

Функция МояФункция2()
	Перем П1, П2;
	Возврат МояПеременная;
КонецФункции // МояФункция2()

МояПеременная = 2;
EOF
;
# в пустой строке после Сообщить(...) первым символом идет табуляция,
# последствия замены \n на \t, в результате чего при splite получаем 
# в качестве последнего элемента массива элемент со значением "\t"
$expected = <<EOF
Перем МояПеременная;

Функция МояФункция1()
	Возврат 1;
КонецФункции // МояФункция1()

Функция МояФункция2()
	Перем П1, П2;
	// Приветствие
	Сообщить("Привет, Мир!");
	
	Возврат МояПеременная;
КонецФункции // МояФункция2()

МояПеременная = 2;
EOF
;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "МояФункция2", $code), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 7 ======================================================

$input = <<EOF
Процедура МояПроцедура()
КонецПроцедуры // МояПроцедура()
EOF
;
# в пустой строке после Сообщить(...) первым символом идет табуляция,
# последствия замены \n на \t, в результате чего при splite получаем 
# в качестве последнего элемента массива элемент со значением "\t"
$expected = <<EOF
Процедура МояПроцедура()
	// Приветствие
	Сообщить("Привет, Мир!");
	
КонецПроцедуры // МояПроцедура()
EOF
;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "МояПроцедура", $code), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 8 ======================================================

$input = <<EOF
Перем МояПеременная;

Процедура МояПроцедура()
	Перем П1, П2, П3;
	П3 = П1 + П2;
КонецПроцедуры // МояПроцедура()

МояПеременная = 2;
EOF
;
# в пустой строке после Сообщить(...) первым символом идет табуляция,
# последствия замены \n на \t, в результате чего при splite получаем 
# в качестве последнего элемента массива элемент со значением "\t"
$expected = <<EOF
Перем МояПеременная;

Процедура МояПроцедура()
	Перем П1, П2, П3;
	// Приветствие
	Сообщить("Привет, Мир!");
	
	П3 = П1 + П2;
КонецПроцедуры // МояПроцедура()

МояПеременная = 2;
EOF
;
# до выражения П3 = П1 + П2;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "МояПроцедура", $code), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

# в пустой строке после Сообщить(...) первым символом идет табуляция,
# последствия замены \n на \t, в результате чего при splite получаем 
# в качестве последнего элемента массива элемент со значением "\t"
$expected = <<EOF
Перем МояПеременная;

Процедура МояПроцедура()
	Перем П1, П2, П3;
	П3 = П1 + П2;
	// Приветствие
	Сообщить("Привет, Мир!");
	
КонецПроцедуры // МояПроцедура()

МояПеременная = 2;
EOF
;
# после выражения П3 = П1 + П2;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "МояПроцедура", $code, 1), 1);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 9 ======================================================

# повторно код не должен добавляться

$input = <<EOF
Перем МояПеременная;
МояПеременная = 1;
// Приветствие
Сообщить("Привет, Мир!");
EOF
;
$expected = <<EOF
Перем МояПеременная;
МояПеременная = 1;
// Приветствие
Сообщить("Привет, Мир!");
EOF
;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "", $code), 0);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);

#== 10 ======================================================

# повторно код не должен добавляться

$input = <<EOF
Перем МояПеременная;

Процедура МояПроцедура()
	Перем П1, П2, П3;
	П3 = П1 + П2;
	// Приветствие
	Сообщить("Привет, Мир!");	
КонецПроцедуры // МояПроцедура()

МояПеременная = 2;
EOF
;
$expected = <<EOF
Перем МояПеременная;

Процедура МояПроцедура()
	Перем П1, П2, П3;
	П3 = П1 + П2;
	// Приветствие
	Сообщить("Привет, Мир!");	
КонецПроцедуры // МояПроцедура()

МояПеременная = 2;
EOF
;
@CodeWorks::lines = split(/\n/, $input, -1);
ok(CodeWorks::InsertCode("", "МояПроцедура", $code), 0);
$output = join("\n", @CodeWorks::lines);
ok($output, $expected);
